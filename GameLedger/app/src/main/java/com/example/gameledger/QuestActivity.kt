package com.example.gameledger

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import android.widget.ImageButton
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.google.firebase.database.DataSnapshot
import com.google.firebase.database.DatabaseError
import com.google.firebase.database.ValueEventListener
import com.google.firebase.database.ktx.database
import com.google.firebase.ktx.Firebase

class QuestActivity : AppCompatActivity() {
    var questList = arrayListOf<Quests>()
    lateinit var questAdapter: QuestAdapter
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_quest)

//        val questList = arrayListOf(
//            Quests("식비", "하루 식비", "50,000", "30,000")
//        )
        initData()

        val quest = findViewById<RecyclerView>(R.id.rv_quest)
        quest.layoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)
        quest.setHasFixedSize(true)

        questAdapter = QuestAdapter(questList)
        quest.adapter = questAdapter

        val back_button = findViewById<ImageButton>(R.id.back_button)
        back_button.setOnClickListener {
            var intent = Intent(this@QuestActivity, MainActivity::class.java)
            startActivity(intent)
        }
    }

    fun initData() {
        val database = Firebase.database
        val user = database.getReference("users").child("userid")
        user.addValueEventListener(object : ValueEventListener {
            override fun onDataChange(dataSnapshot: DataSnapshot) {
                questList.clear()
                var quests = dataSnapshot.child("quests")
                for (quest in quests.children) {
                    val category = quest.child("questCategory").value as? String ?: ""
                    val title = quest.child("questTitle").value as? String ?: ""
                    val value = quest.child("questValue").value as? String ?: ""
                    val ammount = quest.child("accumulatedAmmount").value as? String ?: ""
                    val q = Quests( category, title, value, ammount)
                    questList.add(q)
                }
                questAdapter.notifyDataSetChanged()
            }

            override fun onCancelled(databaseError: DatabaseError) {
                Log.e("FAIL", "Error fetching data")
            }
        })
    }

//    fun inputData() {
//        var category = "용"
//        var title = "버스비"
//        var value = "50,000"
//        var ammount = "0"
//        var quests = Quests(category, title, value, ammount)
//        val database = Firebase.database
//        val user = database.getReference("users").child("userid")
//        val newRef = user.child("quests").push() // This generates a unique key for the new data
//        newRef.setValue(quests)
//            .addOnSuccessListener {
//                // Data successfully saved
//                // newRef.key contains the unique key generated by push()
//                Log.d("SUCCESS", "Data pushed to Firebase with key: ${newRef.key}")
//            }
//            .addOnFailureListener { e ->
//                // Failed to save data
//                Log.e("FAIL", "Error pushing data to Firebase")
//            }
//    }


}



